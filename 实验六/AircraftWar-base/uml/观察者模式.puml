@startuml

interface Observer{
    + {abstract} update():void
}
abstract class AbstractEnemyAircraft
{
    # score:int 
    + AbstractEnemyAircraft(int locationX, int locationY, int speedX, int speedY, int hp, int score)
    +{abstract} generate_prop():List<BaseProp>
    +getScore(): int 
 }

AbstractEnemyAircraft ..|> Observer

class BombProp {
    - enemyBullet: List<BaseBullet>
    - enemyAircrafts: List<AbstractEnemyAircraft>
    + BombProp(int locationX, int locationY, int speedX, int speedY)
	+ work(HeroAircraft hero,boolean usemusic): void
    + addBullets(List<BaseBullet> bullets): void
    + addAircrafts(List<AbstractEnemyAircraft> abstractEnemyAircrafts): void
    + notify_update(): void
}

class MobEnemy {
    - prop:BaseProp
    - props: List<BaseProp>
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + update():void
    +generate_prop(): List<BaseProp> 
}
AbstractEnemyAircraft <|-- MobEnemy

class EliteEnemy{
    - shootNum :int
    - power: int 
    - direction: int
    - prop_kind : int
    - propFactory : PropFactory
    - prop : BaseProp
    - props: List<BaseProp> 
    - context:Context
    - {static} random: Random 
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward() : void
    + shoot():List<BaseBullet>
    + generate_prop() : List<BaseProp> 
    + update():void

}
AbstractEnemyAircraft <|--EliteEnemy


class ElitePlusEnemy{
    - shootNum :int
    - power: int 
    - direction: int
    - prop_kind : int
    - propFactory : PropFactory
    - prop : BaseProp
    - props: List<BaseProp> 
    - context:Context
    - {static} random: Random 
    + ElitePlusEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward() : void
    + shoot():List<BaseBullet>
    + generate_prop() : List<BaseProp> 
    + update():void

}
AbstractEnemyAircraft <|--ElitePlusEnemy


abstract class BaseBullet
{
    - power: int
    + BaseBullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward():void
    + getPower():int
}

BaseBullet ..|> Observer
class EnemyBullet
{
    +EnemyBullet(int locationX, int locationY, int speedX, int speedY, int power)
    +update():void
}
EnemyBullet --|>BaseBullet

BombProp o-->Observer
BombProp o--> BaseBullet
BombProp o--> AbstractEnemyAircraft
@enduml