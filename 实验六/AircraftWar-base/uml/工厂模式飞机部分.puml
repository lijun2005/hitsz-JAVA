@startuml


interface Observer{
    + {abstract} update():void
}

abstract class AbstractEnemyAircraft
{
    # score:int 
    + AbstractEnemyAircraft(int locationX, int locationY, int speedX, int speedY, int hp, int score)
    +{abstract} generate_prop():List<BaseProp>
    +getScore(): int 
 }

AbstractEnemyAircraft ..|> Observer

class MobEnemy {
    - prop:BaseProp
    - props: List<BaseProp>
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + update():void
    +generate_prop(): List<BaseProp> 
}
AbstractEnemyAircraft <|-- MobEnemy

class EliteEnemy{
    - shootNum :int
    - power: int 
    - direction: int
    - prop_kind : int
    - propFactory : PropFactory
    - prop : BaseProp
    - props: List<BaseProp> 
    - context:Context
    - {static} random: Random 
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward() : void
    + shoot():List<BaseBullet>
    + generate_prop() : List<BaseProp> 
    + update():void

}
AbstractEnemyAircraft <|--EliteEnemy


class ElitePlusEnemy{
    - shootNum :int
    - power: int 
    - direction: int
    - prop_kind : int
    - propFactory : PropFactory
    - prop : BaseProp
    - props: List<BaseProp> 
    - context:Context
    - {static} random: Random 
    + ElitePlusEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward() : void
    + shoot():List<BaseBullet>
    + generate_prop() : List<BaseProp> 
    + update():void

}
AbstractEnemyAircraft <|--ElitePlusEnemy

class Boss{
    - shootNum :int
    - power: int 
    - direction: int
    - prop_kind : int
    - propFactory : PropFactory
    - prop : BaseProp
    - props: List<BaseProp> 
    - context:Context
    - {static} random: Random 
    + Boss(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward() : void
    + shoot():List<BaseBullet>
    + generate_prop() : List<BaseProp> 
    + update():void

}
AbstractEnemyAircraft <|--Boss


interface EnemyFactory{
    + {abstract} createEnemy() : AbstractAircraft
}

class MobFactory{
    + createEnemy(): MobEnemy
}
class EliteFactory{
    + createEnemy(): EliteEnemy
}
class BossFactory{
    + createEnemy(): Boss
}
class ElitePlusFactory{
    + createEnemy(): ElitePlusEnemy
}


EnemyFactory <|.. MobFactory
EnemyFactory <|.. EliteFactory
EnemyFactory <|.. ElitePlusFactory
EnemyFactory <|.. BossFactory

MobFactory ..> MobEnemy
EliteFactory ..> EliteEnemy
ElitePlusFactory ..>ElitePlusEnemy
BossFactory ..>Boss


@enduml